{"version":3,"sources":["Login.module.css","AuthServer.js","Authcontext.jsx","PrivateRoute.jsx","LoginPage.jsx","AuthButton.jsx","Protected.jsx","Auth.jsx","serviceWorker.js","index.js"],"names":["module","exports","authServer","token","JSON","parse","localStorage","getItem","isLogin","signIn","username","password","axios","post","response","data","setItem","stringify","signOut","this","authContext","createContext","ProvideAuth","children","auth","useState","setToken","a","useProvideAuth","Provider","value","useAuth","useContext","PrivateRoute","rest","render","location","to","pathname","state","from","LoginPage","history","useHistory","useLocation","userName","setUsername","setPassword","error","setError","noValid","setNoValidUser","e","preventDefault","replace","non_field_errors","useEffect","length","validUserName","RegExp","test","className","S","formWrapper","form","TextField","label","variant","type","onChange","target","name","errorText","Button","disabled","onClick","color","AuthButton","push","clear","signout","Protected","users","setUsers","filterUser","setFilterUser","get","headers","Authorization","sort","b","id","fetchData","dataWrapper","headerWrapper","header","filterWrapper","htmlFor","filterLabel","size","tableWrapper","table","cx","tableRow","tableRowTitle","tableTd","tableTdId","filter","user","includes","map","key","last_name","first_name","renderUsers","AuthExample","basename","process","content","exact","path","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,QAAU,uBAAuB,QAAU,uBAAuB,UAAY,yBAAyB,UAAY,yBAAyB,aAAe,4BAA4B,MAAQ,qBAAqB,SAAW,wBAAwB,cAAgB,6BAA6B,MAAQ,qBAAqB,QAAU,uBAAuB,cAAgB,6BAA6B,KAAO,oBAAoB,YAAc,2BAA2B,cAAgB,6BAA6B,OAAS,sBAAsB,QAAU,uBAAuB,YAAc,2BAA2B,YAAc,6B,qNCC5nBC,EAAa,CACtBC,MAAOC,KAAKC,MAAMC,aAAaC,QAAQ,UACvCC,SAAS,EAEHC,OAJgB,SAITC,EAAUC,GAAW,IAAD,wIACNC,IAAMC,KAAK,kEAAmE,CACjGH,SAAUA,EACVC,SAAUA,IAHe,OACvBG,EADuB,OAK7B,EAAKX,MAAQW,EAASC,KAAKZ,MAC3BG,aAAaU,QAAQ,QAASZ,KAAKa,UAAU,EAAKd,QAClD,EAAKK,SAAU,EAPc,8CAUjCU,QAdsB,WAelBC,KAAKX,SAAU,EACfW,KAAKhB,MAAQ,OCKrB,IAAMiB,EAAcC,0BAEb,SAASC,EAAT,GAAkC,IAAZC,EAAW,EAAXA,SACnBC,EAtBV,WAA2B,IAAD,EACIC,mBAASvB,EAAWC,OADxB,mBACfA,EADe,KACRuB,EADQ,KAYtB,MAAO,CACHvB,QACAM,OAXQ,uCAAG,WAAOC,EAAUC,GAAjB,SAAAgB,EAAA,sEACLzB,EAAWO,OAAOC,EAAUC,GADvB,OAEXe,EAASxB,EAAWC,OAFT,2CAAH,wDAYRe,QARS,uCAAG,sBAAAS,EAAA,sEACNzB,EAAWgB,UADL,OAEZQ,EAAS,MAFG,2CAAH,sDAeAE,GACb,OACI,kBAACR,EAAYS,SAAb,CAAsBC,MAAON,GACxBD,GAKN,SAASQ,IACZ,OAAOC,qBAAWZ,GChCf,SAASa,EAAT,GAA8C,IAAtBV,EAAqB,EAArBA,SAAaW,EAAQ,4BAC5CV,EAAOO,IACX,OACI,kBAAC,IAAD,iBACQG,EADR,CAEIC,OAAQ,gBAAGC,EAAH,EAAGA,SAAH,OACJZ,EAAKrB,MACDoB,EAEA,kBAAC,IAAD,CACIc,GAAI,CACAC,SAAU,IACVC,MAAO,CAAEC,KAAMJ,U,sCCTpC,SAASK,IACZ,IAAIC,EAAUC,cACVP,EAAWQ,cACXpB,EAAOO,IAGNS,GAAQJ,EAASG,OAAS,CAACC,KAAM,CAACF,SAAU,gBAA5CE,KANmB,EAOQf,mBAAS,MAPjB,mBAOjBoB,EAPiB,KAOPC,EAPO,OAQQrB,mBAAS,IARjB,mBAQjBd,EARiB,KAQPoC,EARO,OASEtB,mBAAS,MATX,mBASjBuB,EATiB,KASVC,EATU,OAUUxB,oBAAS,GAVnB,mBAUjByB,EAViB,KAURC,EAVQ,iDA4BxB,WAAqBC,GAArB,SAAAzB,EAAA,6DACIyB,EAAEC,iBADN,kBAGc7B,EAAKf,OAAOoC,EAAUlC,GAHpC,OAIQ+B,EAAQY,QAAQd,GAJxB,gDAMQS,EAAS,KAAMnC,SAASC,KAAKwC,iBAAiB,IAC9CR,EAAY,IAPpB,0DA5BwB,sBAYxBS,qBAAU,WACN,GAAiB,OAAbX,EAAJ,EAGIA,EAASY,QAAU,KAAOZ,EAASY,OAAS,IAC5CN,GAAe,GAEnB,IACIO,EADK,IAAIC,OAAO,gBACGC,KAAKf,GAExBM,GADAO,MAKL,CAACb,IAuBJ,OAAIrB,EAAKrB,MACE,kBAAC,IAAD,CAAUkC,GAAG,eAIpB,yBAAKwB,UAAWC,IAAEC,aACd,0BAAMF,UAAWC,IAAEE,MACf,kBAACC,EAAA,EAAD,CAAWjB,MAAOE,EAASgB,MAAM,kCAASC,QAAQ,WAAWC,KAAK,OACvDC,SAlBE,SAACjB,GACtBN,EAAYM,EAAEkB,OAAOxC,OACrBmB,EAAS,OAiBUsB,KAAK,aAChB,kBAACN,EAAA,EAAD,CAAWnC,MAAOnB,EAAUuD,MAAM,wCAAUC,QAAQ,WAAWC,KAAK,WACzDC,SAhBE,SAACjB,GACtBL,EAAYK,EAAEkB,OAAOxC,OACrBmB,EAAS,OAeUsB,KAAK,aACfvB,GAAS,0BAAMa,UAAWC,IAAEU,WAAYxB,GACzC,kBAACyB,EAAA,EAAD,CAAQC,SAAUxB,IAAYvC,EAAS8C,SAAWZ,EAASY,OAAQkB,QA/DvD,4CA+DuER,QAAQ,YAAYS,MAAM,UAAUvC,GAAG,cAA1H,oCC/DT,SAASwC,IACZ,IAAInC,EAAUC,cACVnB,EAAOO,IAEX,OACI,kBAAC0C,EAAA,EAAD,CAAQE,QAAS,WACbnD,EAAKN,SAAQ,kBAAMwB,EAAQoC,KAAK,QAChCxE,aAAayE,SACdZ,QAAQ,YAAYS,MAAM,UAAUvC,GAAG,aAAawB,UAAWC,IAAEkB,SAHpE,kC,qBCFD,SAASC,IAAa,IAAD,EACExD,mBAAS,MADX,mBACjByD,EADiB,KACVC,EADU,OAEY1D,mBAAS,IAFrB,mBAEjB2D,EAFiB,KAELC,EAFK,KAGpB7D,EAAOO,IACL5B,EAAK,gBAAYqB,EAAKrB,OA2C5B,OA1CAqD,qBAAU,WAAM,4CACZ,8BAAA7B,EAAA,sEAC2Bf,IAAM0E,IAAI,gEAAiE,CAC9FC,QAAS,CAACC,cAAerF,KAFjC,OACUW,EADV,QAIUoE,EAAQpE,EAASC,MAElB0E,MAAK,SAAU9D,EAAG+D,GACf,OAAI/D,EAAEgE,GAAKD,EAAEC,GACF,EAEPhE,EAAEgE,GAAKD,EAAEC,IACD,EAEL,KAEfR,EAASD,GAfb,4CADY,uBAAC,WAAD,wBAkBZU,KACD,CAACzF,IAwBA,yBAAK0D,UAAWC,IAAE+B,aAEd,yBAAKhC,UAAWC,IAAEgC,eACd,yBAAKjC,UAAWC,IAAEiC,QACd,yBAAKlC,UAAWC,IAAEkC,eACd,2BAAOC,QAAQ,SAASpC,UAAWC,IAAEoC,aAArC,wCACA,kBAACjC,EAAA,EAAD,CAAW0B,GAAG,sBAAsBQ,KAAK,QAAQjC,MAAM,8FAAmBC,QAAQ,WACvEC,KAAK,OACLC,SAb/B,SAAyBjB,GACrBiC,EAAcjC,EAAEkB,OAAOxC,WAeX,kBAAC+C,EAAD,QAIR,yBAAKhB,UAAWC,IAAEsC,cACd,yBAAKvC,UAAWC,IAAEuC,OACd,yBAAKxC,UAAWyC,IAAGxC,IAAEyC,SAAUzC,IAAE0C,gBAC7B,uBAAG3C,UAAWyC,IAAGxC,IAAE2C,QAAS3C,IAAE4C,YAA9B,MACA,uBAAG7C,UAAWC,IAAE2C,SAAhB,YACA,uBAAG5C,UAAWC,IAAE2C,SAAhB,aACA,uBAAG5C,UAAWC,IAAE2C,SAAhB,eA3CpB,SAAqBvB,GACjB,GAAc,OAAVA,EACA,OAAOA,EACFyB,QAAO,SAACC,GACL,OAAOA,EAAKlG,SAASmG,SAASzB,MAEjC0B,KAAI,SAAAF,GACD,OAAO,yBAAK/C,UAAWC,IAAEyC,SAAUQ,IAAKH,EAAKjB,IACzC,uBAAG9B,UAAWyC,IAAGxC,IAAE2C,QAAS3C,IAAE4C,YAAaE,EAAKjB,IAChD,uBAAG9B,UAAWC,IAAE2C,SAAUG,EAAKlG,UAC/B,uBAAGmD,UAAWC,IAAE2C,SAAUG,EAAKI,WAC/B,uBAAGnD,UAAWC,IAAE2C,SAAUG,EAAKK,gBAkClCC,CAAYhC,MCnElB,SAASiC,IACpB,OACI,kBAAC7F,EAAD,KACI,kBAAC,IAAD,CAAQ8F,SAAUC,qBACd,yBAAKxD,UAAWC,IAAEwD,SACd,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KACd,kBAAC/E,EAAD,OAEJ,kBAACR,EAAD,CAAcuF,KAAK,cACf,kBAACvC,EAAD,OAEJ,kBAAChD,EAAD,CAAcuF,KAAK,KACf,kBAAC,IAAD,CAAUnF,GAAG,oBCdrBoF,QACW,cAA7BC,OAAOtF,SAASuF,UAEe,UAA7BD,OAAOtF,SAASuF,UAEhBD,OAAOtF,SAASuF,SAASC,MACvB,2DCZNC,IAAS1F,OACP,kBAAC,IAAM2F,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAvF,GACLwF,QAAQxF,MAAMA,EAAMyF,c","file":"static/js/main.fe0db94d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Login_content__OEYzy\",\"tableTd\":\"Login_tableTd__3ArPj\",\"errorText\":\"Login_errorText__16nm1\",\"tableTdId\":\"Login_tableTdId__35C5r\",\"tableWrapper\":\"Login_tableWrapper__2Ris7\",\"table\":\"Login_table__2810l\",\"tableRow\":\"Login_tableRow__3mU09\",\"tableRowTitle\":\"Login_tableRowTitle__9R7b2\",\"valid\":\"Login_valid__1M_y3\",\"noValid\":\"Login_noValid__3BVUz\",\"filterWrapper\":\"Login_filterWrapper__3DhI6\",\"form\":\"Login_form__1v13g\",\"formWrapper\":\"Login_formWrapper__Blp6g\",\"headerWrapper\":\"Login_headerWrapper__341-J\",\"header\":\"Login_header__13aLg\",\"signout\":\"Login_signout__3C6OV\",\"dataWrapper\":\"Login_dataWrapper__3D5II\",\"filterLabel\":\"Login_filterLabel__REho4\"};","import axios from \"axios\";\n\nexport const authServer = {\n    token: JSON.parse(localStorage.getItem('token')),\n    isLogin: false,\n\n    async signIn(username, password) {\n        const response = await axios.post('https://emphasoft-test-assignment.herokuapp.com/api-token-auth/', {\n            username: username,\n            password: password\n        });\n        this.token = response.data.token\n        localStorage.setItem('token', JSON.stringify(this.token));\n        this.isLogin = true;\n    },\n\n    signOut() {\n        this.isLogin = false;\n        this.token = null\n    },\n}","import React, {createContext, useContext, useState} from \"react\";\nimport {authServer} from \"./AuthServer\";\n\n\nfunction useProvideAuth() {\n    const [token, setToken] = useState(authServer.token);\n\n    const signIn = async (username, password) => {\n        await authServer.signIn(username, password);\n        setToken(authServer.token);\n    }\n    const signOut = async () => {\n        await authServer.signOut();\n        setToken(null);\n    }\n\n    return {\n        token,\n        signIn,\n        signOut\n    };\n}\n\nconst authContext = createContext();\n\nexport function ProvideAuth({children}) {\n    const auth = useProvideAuth();\n    return (\n        <authContext.Provider value={auth}>\n            {children}\n        </authContext.Provider>\n    );\n}\n\nexport function useAuth() {\n    return useContext(authContext);\n}","import {Redirect, Route} from \"react-router-dom\";\nimport React from \"react\";\nimport { useAuth} from \"./Authcontext\"\nexport function PrivateRoute({ children, ...rest }) {\n    let auth = useAuth();\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                auth.token ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/\",\n                            state: { from: location }\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}","import {Redirect, useHistory, useLocation} from \"react-router-dom\";\nimport React, {useState, useEffect} from \"react\";\nimport {useAuth} from \"./Authcontext\";\nimport S from './Login.module.css';\nimport {TextField, Button} from '@material-ui/core';\n\nexport function LoginPage() {\n    let history = useHistory();\n    let location = useLocation();\n    let auth = useAuth();\n\n\n    let {from} = location.state || {from: {pathname: \"/protected\"}};\n    const [userName, setUsername] = useState(null);\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState(null);\n    const [noValid, setNoValidUser] = useState(false);\n\n    useEffect(() => {\n        if (userName === null) {\n            return;\n        }\n        if (userName.length >= 150 || userName.length < 1) {\n            setNoValidUser(true)\n        }\n        let re = new RegExp(\"^[\\\\w.@+-]+$\");\n        let validUserName = re.test(userName);\n        if (validUserName) {\n            setNoValidUser(false)\n        } else {\n            setNoValidUser(true)\n        }\n    }, [userName])\n\n    async function login(e) {\n        e.preventDefault();\n        try {\n            await auth.signIn(userName, password);\n            history.replace(from);\n        } catch (error) {\n            setError(error.response.data.non_field_errors[0]);\n            setPassword('');\n        }\n    }\n\n    const onChangeUsername = (e) => {\n        setUsername(e.target.value);\n        setError(null)\n    }\n\n    const onChangePassword = (e) => {\n        setPassword(e.target.value);\n        setError(null)\n    }\n\n    if (auth.token) {\n        return <Redirect to=\"/protected\"/>\n    }\n\n    return (\n        <div className={S.formWrapper}>\n            <form className={S.form}>\n                <TextField error={noValid} label=\"Логин:\" variant=\"outlined\" type=\"text\"\n                           onChange={onChangeUsername}\n                           name='username'/>\n                <TextField value={password} label=\"Пароль:\" variant=\"outlined\" type=\"password\"\n                           onChange={onChangePassword}\n                           name='password'/>\n                {error && <span className={S.errorText}>{error}</span>}\n                <Button disabled={noValid || !password.length || !userName.length} onClick={login} variant=\"contained\" color=\"primary\" to=\"/protected\">\n                    Войти\n                </Button>\n            </form>\n        </div>\n    );\n}","import {useHistory} from \"react-router-dom\";\nimport React from \"react\";\nimport {useAuth} from \"./Authcontext\";\nimport {Button} from '@material-ui/core';\nimport S from './Login.module.css'\n\nexport function AuthButton() {\n    let history = useHistory();\n    let auth = useAuth();\n\n    return (\n        <Button onClick={() => {\n            auth.signOut(() => history.push(\"/\"));\n            localStorage.clear();\n        }} variant=\"contained\" color=\"primary\" to=\"/protected\" className={S.signout}>\n            Выйти\n        </Button>\n\n    )\n}\n","import React, {useState, useEffect} from \"react\";\nimport {useAuth} from \"./Authcontext\";\nimport axios from \"axios\";\nimport S from './Login.module.css';\nimport {TextField} from '@material-ui/core';\nimport {AuthButton} from \"./AuthButton\";\nimport cx from 'classnames'\n\n\nexport function Protected() {\n    const [users, setUsers] = useState(null);\n    const [filterUser, setFilterUser] = useState('');\n    let auth = useAuth();\n    const token = `Token ${auth.token}`;\n    useEffect(() => {\n        async function fetchData() {\n            const response = await axios.get('https://emphasoft-test-assignment.herokuapp.com/api/v1/users/', {\n                headers: {Authorization: token}\n            })\n            const users = response.data;\n            users\n                .sort(function (a, b) {\n                    if (a.id > b.id) {\n                        return 1;\n                    }\n                    if (a.id < b.id) {\n                        return -1;\n                    }\n                    return 0;\n                })\n            setUsers(users);\n        }\n        fetchData();\n    }, [token]);\n\n    function renderUsers(users) {\n        if (users !== null) {\n            return users\n                .filter((user) => {\n                    return user.username.includes(filterUser)\n                })\n                .map(user => {\n                    return <div className={S.tableRow} key={user.id}>\n                        <p className={cx(S.tableTd, S.tableTdId)}>{user.id}</p>\n                        <p className={S.tableTd}>{user.username}</p>\n                        <p className={S.tableTd}>{user.last_name}</p>\n                        <p className={S.tableTd}>{user.first_name}</p>\n                    </div>\n                })\n        }\n    }\n\n    function filterUserInput(e) {\n        setFilterUser(e.target.value);\n    }\n\n    return (\n        <div className={S.dataWrapper}>\n\n            <div className={S.headerWrapper}>\n                <div className={S.header}>\n                    <div className={S.filterWrapper}>\n                        <label htmlFor=\"filter\" className={S.filterLabel}>Фильтр</label>\n                        <TextField id=\"standard-size-small\" size=\"small\" label=\"Имя пользователя\" variant=\"outlined\"\n                                   type=\"text\"\n                                   onChange={filterUserInput}\n                      />\n                    </div>\n                    <AuthButton/>\n                </div>\n            </div>\n\n            <div className={S.tableWrapper}>\n                <div className={S.table}>\n                    <div className={cx(S.tableRow, S.tableRowTitle)}>\n                        <p className={cx(S.tableTd, S.tableTdId)}>ID</p>\n                        <p className={S.tableTd}>username</p>\n                        <p className={S.tableTd}>last_name</p>\n                        <p className={S.tableTd}>first_name</p>\n                    </div>\n                    {renderUsers(users)}\n                </div>\n            </div>\n\n        </div>\n\n    )\n}\n","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n} from \"react-router-dom\";\nimport {PrivateRoute} from \"./PrivateRoute\";\nimport {LoginPage} from \"./LoginPage\";\nimport {ProvideAuth} from \"./Authcontext\";\nimport {Protected} from \"./Protected\";\nimport S from './Login.module.css';\n\nexport default function AuthExample() {\n    return (\n        <ProvideAuth>\n            <Router basename={process.env.PUBLIC_URL}>\n                <div className={S.content}>\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <LoginPage />\n                        </Route>\n                        <PrivateRoute path=\"/protected\">\n                            <Protected />\n                        </PrivateRoute>\n                        <PrivateRoute path=\"*\">\n                            <Redirect to=\"/protected\" />\n                        </PrivateRoute>\n                    </Switch>\n                </div>\n            </Router>\n        </ProvideAuth>\n    );\n}\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Auth from \"./Auth\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Auth />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}